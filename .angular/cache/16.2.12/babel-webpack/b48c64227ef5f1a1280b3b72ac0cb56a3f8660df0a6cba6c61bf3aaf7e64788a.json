{"ast":null,"code":"import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nclass AppInterceptor {\n  intercept(req, next) {\n    return next.handle(req);\n  }\n  static #_ = this.ɵfac = function AppInterceptor_Factory(t) {\n    return new (t || AppInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppInterceptor,\n    factory: AppInterceptor.ɵfac\n  });\n}\nexport const appInterceptorProvider = {\n  useClass: AppInterceptor,\n  multi: true,\n  provide: HTTP_INTERCEPTORS\n};","map":{"version":3,"names":["HTTP_INTERCEPTORS","AppInterceptor","intercept","req","next","handle","_","_2","factory","ɵfac","appInterceptorProvider","useClass","multi","provide"],"sources":["/Users/lilly/Documents/GitHub/Find-your-drink-app/src/app/app.interceptor.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable, Provider } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n\n@Injectable()\nclass AppInterceptor implements HttpInterceptor {\n    intercept(\n        req: HttpRequest<any>, \n        next: HttpHandler\n        ): Observable<HttpEvent<any>> {\n        return next.handle(req);\n    }\n}\n\nexport const appInterceptorProvider: Provider = {\n    useClass: AppInterceptor,\n    multi: true,\n    provide: HTTP_INTERCEPTORS,\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAA8D,sBAAsB;;AAK9G,MACMC,cAAc;EAChBC,SAASA,CACLC,GAAqB,EACrBC,IAAiB;IAEjB,OAAOA,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC;EAC3B;EAAC,QAAAG,CAAA,G;qBANCL,cAAc;EAAA;EAAA,QAAAM,EAAA,G;WAAdN,cAAc;IAAAO,OAAA,EAAdP,cAAc,CAAAQ;EAAA;;AASpB,OAAO,MAAMC,sBAAsB,GAAa;EAC5CC,QAAQ,EAAEV,cAAc;EACxBW,KAAK,EAAE,IAAI;EACXC,OAAO,EAAEb;CACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}